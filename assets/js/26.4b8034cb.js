(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{165:function(e,a,r){"use strict";r.r(a);var s=r(0),t=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"fields-builder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#fields-builder","aria-hidden":"true"}},[e._v("#")]),e._v(" Fields Builder")]),r("p",[e._v("Este componente permitirá generar el markup completo para los campos del formulario con una línea de código.")]),r("p",[e._v("Si has usado antes el componente HTML de Laravel Collective, ya sabes cómo utilizar los conceptos básicos de este componente; simplemente reemplaza el alias “Form” por “Field”, por ejemplo, sustituye:")]),r("p",[r("code",[e._v("{!! Form::text(‘name’, ‘value’, $attributes) !!}")])]),r("p",[e._v("Por esto:")]),r("p",[r("code",[e._v("{!! Field::text(‘name’, ‘value’, $attributes) !!}")])]),r("p",[e._v("Esto generará un campo incluyendo el container, el label, el control y cualquier error asociado con él.")]),r("p",[e._v("Los campos serán generado con el markup predeterminado de "),r("strong",[e._v("Twitter Bootstrap")]),e._v(" (pero también se puede publicar y personalizar las plantillas).")]),r("p",[e._v("Igualmente hay un montón de opciones convenientes:")]),r("h2",{attrs:{id:"omitir-el-argumento-value"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#omitir-el-argumento-value","aria-hidden":"true"}},[e._v("#")]),e._v(" Omitir el argumento value")]),r("p",[e._v("Si no quieres pasar un argumento value ("),r("code",[e._v("null")]),e._v(") pero quiere pasar el array de "),r("code",[e._v("$attributes")]),e._v(", se puede saltar el segundo argumento, es decir, esto:")]),r("p",[r("code",[e._v("{!! Field::text(‘name’, $attributes) !!}")])]),r("p",[e._v("Es lo mismo que:")]),r("p",[r("code",[e._v("{!! Field::text(‘name’, null, $attributes) !!}")])]),r("h2",{attrs:{id:"labels"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#labels","aria-hidden":"true"}},[e._v("#")]),e._v(" Labels")]),r("p",[e._v("Se puede explicítamente pasar un label a un campo como parte del array de atributos, es decir:")]),r("p",[r("code",[e._v("{!! Field::text(’name’, [‘label’ => ‘Full name’]) !!}")])]),r("p",[e._v("Como una segunda opción, se puede almacenar los labels en la carpeta lang/ con la misma convención usada para almacenar los nombres de los atributos para los errores de validación:")]),r("p",[e._v("validation.atributos.[nombre_del_atributo].")]),r("p",[e._v("(De esta manera se puede almacenar todas los labels del formulario en un solo lugar)")]),r("p",[e._v("Si saltas ambas opciones, entonces FieldBuilder generará un label basado en el nombre del campo, es decir:")]),r("p",[r("code",[e._v("full_name")]),e._v(' se mostrará "Full name" como el label predeterminado.')]),r("h2",{attrs:{id:"templates"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#templates","aria-hidden":"true"}},[e._v("#")]),e._v(" Templates")]),r("p",[e._v("Por defecto, los campos serán renderizados con la plantilla predeterminada, ubicada en la carpeta [theme]/fields, por ejemplo, para el tema Bootstrap sería:")]),r("p",[r("code",[e._v("vendor/styde/html/themes/bootstrap/fields/default.blade.php")])]),r("p",[e._v("Pero se tiene la opción de personalizar la plantilla usada para un tipo o campo particular:")]),r("h3",{attrs:{id:"personalizar-por-tipo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#personalizar-por-tipo","aria-hidden":"true"}},[e._v("#")]),e._v(" Personalizar por tipo")]),r("p",[e._v("Algunos frameworks de CSS (como Bootstrap) necesitan diferentes markups para distintas tipos de campos, así que para utilizar la configuración que asigna una plantilla diferente a un tipo de campo determinado, se hace algo como esto:")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\t'themes' => [\n\t\t'bootstrap' => [\n\t\t\t'field_templates' => [\n\t\t\t\t'checkbox' => 'checkbox',\n\t\t\t\t'checkboxes' => 'collection',\n\t\t\t\t'radios' => 'collection'\n\t\t\t],\n\t\t\t//...\n\t//...\n")])])]),r("p",[e._v('Con esta configuración los campos "checkbox" usarán la plantilla '),r("code",[e._v("vendor/styde/html/themes/bootstrap/fields/checkbox.blade.php")]),e._v(' por defecto, mientras que los campos "checkboxes" y "radios" utilizará la plantilla '),r("code",[e._v("vendor/styde/html/themes/bootstrap/fields/collection.blade.php")]),e._v(".")]),r("p",[e._v("Como puedes ver, la configuración es para este theme en específico, ya que cada framework de CSS tiene especificaciones diferentes.")]),r("p",[e._v("Nota: sólo tienes que preocuparte por el theme que realmente necesitas, por lo que si no planeas usar Bootstrap, puedes borrar/omitir la configuración "),r("code",[e._v("bootstrap")])]),r("h3",{attrs:{id:"personalizar-un-campo-determinado"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#personalizar-un-campo-determinado","aria-hidden":"true"}},[e._v("#")]),e._v(" Personalizar un campo determinado")]),r("p",[e._v("Puedes especificar una "),r("code",[e._v("template")]),e._v(" personalizada para un solo campo a través de "),r("code",[e._v("'template key'")]),e._v(" del array "),r("code",[e._v("$attributes")]),e._v(", así:")]),r("p",[r("code",[e._v("{!! Field::text(’name’, [’template’ => ’templates/my_template’]) !!}")])]),r("p",[e._v("La ruta será relativa al directorio resources/views/")]),r("h3",{attrs:{id:"personalizacion-de-plantillas-predeterminadas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#personalizacion-de-plantillas-predeterminadas","aria-hidden":"true"}},[e._v("#")]),e._v(" Personalización de plantillas predeterminadas")]),r("p",[e._v("Si quieres personalizar las plantillas predeterminadas, sólo ejecuta "),r("code",[e._v("php artisan vendor:publish")]),e._v(" en la consola y todas las plantillas serán copiadas a la carpeta "),r("code",[e._v("resources/views/themes/[theme]/fields/")])]),r("p",[e._v("De otra manera, el paquete usará las plantillas predeterminadas (almacenadas en "),r("code",[e._v("/vendor/styde/html/themes/")]),e._v(") y no será necesario copiar archivos adicionales dentro del proyecto.")]),r("h2",{attrs:{id:"atributo-name"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#atributo-name","aria-hidden":"true"}},[e._v("#")]),e._v(" Atributo name")]),r("p",[e._v("Puedes usar la notación de punto como nombre del campo, por ejemplo: "),r("code",[e._v("profile.twitter")]),e._v(" y se transformará a "),r("code",[e._v("profile[twitter]")])]),r("h2",{attrs:{id:"atributo-id"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#atributo-id","aria-hidden":"true"}},[e._v("#")]),e._v(" Atributo id")]),r("p",[e._v("Éste se asignará automáticamente para control de cada input, si utilizas la notación de punto (ejemplo: user.name) los puntos serán reemplazados por guiones bajos (ejemplo: user_name)")]),r("h2",{attrs:{id:"atributo-required"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#atributo-required","aria-hidden":"true"}},[e._v("#")]),e._v(" Atributo required")]),r("p",[e._v("Puedes especificar un valor 'required' en el array de atributos:")]),r("p",[r("code",[e._v("{!! Field::text(’name’, [’required’]) !!}")])]),r("p",[e._v("O como un par llave => valor (el campo será marcado como "),r("code",[e._v("required")]),e._v(" si el valor se evalúa como true, es decir:")]),r("p",[r("code",[e._v("$required = true;")])]),r("p",[r("code",[e._v("{!! Field::text(’name’, null, [’required’ => $required]) !!}")])]),r("p",[e._v("Las plantillas de campo siempre tendrán una variable "),r("code",[e._v("required")]),e._v(" por lo que pueda ser usado para imprimir clases de CSS adicionales o badges, para indicar si un campo es necesario u opcional, es decir:")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('    @if ($required)\n        <span class="label label-info">Required</span>\n    @endif\n')])])]),r("h2",{attrs:{id:"errores"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#errores","aria-hidden":"true"}},[e._v("#")]),e._v(" Errores")]),r("p",[e._v("Cualquier error de sesión será cargado en el FieldBuilder a través de "),r("code",[e._v("HtmlServiceProvider")]),e._v(" y se tendrá "),r("code",[e._v("$errors")]),e._v(" específicos por cada campo disponible en la plantilla, también se tendrá una variable "),r("code",[e._v("$hasErrors")]),e._v(" en caso que el campo tenga algún error y se necesite imprimir una clase de CSS adicional, etc.")]),r("p",[e._v("Por ejemplo, con Twitter Bootstrap se necesitará una clase "),r("code",[e._v("has-error")]),e._v(" en caso que se quiera que los campos del formulario con errores sean coloreados en rojo (tema de UX).")]),r("p",[e._v("Este es un extracto de una plantilla personalizada para el theme Bootstrap:")]),r("p",[r("code",[e._v("<div{!! Html::classes(['form-group', 'has-error' => $hasErrors]) !!}>")])]),r("p",[e._v("Los inputs, selects, textareas, etc. con errores también tendrán una clase de CSS adicional que se puede configurar de esta manera:")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("    'themes' => [\n        'bootstrap' => [\n            //...\n            'field_classes' => [\n            \t\t//...\n                'error' => 'input-with-feedback'\n                //...\n")])])]),r("p",[e._v("Una vez más, si estás usando Twitter Bootstrap cualquier campo con errores tendrá la clase "),r("code",[e._v("input-with-feedback")]),e._v(". Esto también es necesario para mostrar el input en color rojo.")]),r("h2",{attrs:{id:"options"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#options","aria-hidden":"true"}},[e._v("#")]),e._v(" Options")]),r("p",[e._v("Para selects, radios and checkboxes, se puede omitir los argumentos de las opciones o pasar "),r("code",[e._v("null")]),e._v(":")]),r("p",[r("code",[e._v("{!! Field::select('os') !!}")]),e._v(" or "),r("code",[e._v("{!! Field::select('os', null) !!}")])]),r("p",[e._v("Si existe un modelo vinculado al formulario, entonces el FieldBuilder verificará si hay un método llamado: "),r("code",[e._v("get[fieldName]Options")]),e._v(", en ese caso, será llamado y devolverá los valores a ser utilizados como las opciones, es decir:")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("class Product extends Model \n\n    //...\n    \n    public function getOsOptions()\n    {\n        return ['osx', 'linux', 'windows'];\n    }\n    \n    //...\n")])])]),r("h2",{attrs:{id:"opcion-empty"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#opcion-empty","aria-hidden":"true"}},[e._v("#")]),e._v(" Opción empty")]),r("p",[e._v('Los campos select frecuentemente necesitan una opción empty (como "Selecciona una opción, por favor") que se puede pasar con el atributo '),r("code",[e._v("'empty'")]),e._v(" de esta manera:")]),r("p",[r("code",[e._v("{!! Field::select('os', null, ['empty' => 'Selecciona tu sistema operativo favorito']) !!}")])]),r("p",[e._v("Si no se pasa el atributo "),r("code",[e._v("'empty'")]),e._v(", entonces el componente buscará uno usando el componente traslator.")]),r("p",[e._v("Primero, buscará un texto empty personalizado según el nombre del campo, siguiendo esta convención: "),r("code",[e._v('"validation.empty_option.[field_name]"')])]),r("p",[e._v("Si no se encuentra ninguno, se buscará la opción empty por defecto: "),r("code",[e._v('"validation.empty_option.default"')])]),r("p",[e._v("En último caso, si ninguna de las opciones es encontrada, se usará un string vacío como opción empty.")]),r("h2",{attrs:{id:"abreviaturas"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#abreviaturas","aria-hidden":"true"}},[e._v("#")]),e._v(" Abreviaturas")]),r("p",[e._v("Para ahorrar algunas pulsaciones de teclas, puedes utilizar abreviaturas en lugar del nombre completo de los atributos, pasándolos en la configuración:")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("    /*\n     * Especifica las abreviaturas para los atributos del campo del formulario\n     */\n    'abbreviations' => [\n        'ph' => 'placeholder',\n        'max' => 'maxlength',\n        'tpl' => 'template'\n    ],\n")])])]),r("p",[e._v("Después se podrán hacer cosas como éstas:")]),r("p",[r("code",[e._v("{!! Field::text('name', ['ph' => 'Esto será el placeholder]) !!}")])]),r("h2",{attrs:{id:"clases-de-css"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#clases-de-css","aria-hidden":"true"}},[e._v("#")]),e._v(" Clases de CSS")]),r("p",[e._v("Se puede pasar clases de CSS personalizadas para cada campo usando la llave 'class' del array de atributos, también se pueden agregar clases adicionales:")]),r("h3",{attrs:{id:"clases-predeterminadas-por-tipo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#clases-predeterminadas-por-tipo","aria-hidden":"true"}},[e._v("#")]),e._v(" Clases predeterminadas (por tipo)")]),r("p",[e._v("Utilizando la configuración, se puede asignar clases de CSS predeterminadas para cada campo según su tipo:")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("    'themes' => [\n\t\t\t//...\n        'bootstrap' => [\n            //...\n            'field_classes' => [\n                // tipo => clase o clases de CSS\n                'default' => 'form-control',\n                'checkbox' => '',\n                'error' => 'input-with-feedback'\n            ],\n")])])]),r("p",[e._v("Por supuesto, esto es para cada theme en específico, debido a que es imposible convencer a todos los autores de frameworks de CSS de usar las mismas clases.")]),r("h3",{attrs:{id:"clases-de-css-para-controls-con-errores"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#clases-de-css-para-controls-con-errores","aria-hidden":"true"}},[e._v("#")]),e._v(" Clases de CSS para controls con errores")]),r("p",[e._v("Si un input tiene errores, una clase de CSS adicional llamada "),r("code",[e._v("error")]),e._v(" se agregará, también puede ser configurada para cada theme (véase más arriba).")]),r("h2",{attrs:{id:"control-de-acceso"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#control-de-acceso","aria-hidden":"true"}},[e._v("#")]),e._v(" Control de acceso")]),r("p",[e._v("Es posible que desees ocultar algunos campos para ciertos usuarios, esto se puede hacer usando el Access Handler incluído con este componente:")])])}],!1,null,null,null);a.default=t.exports}}]);